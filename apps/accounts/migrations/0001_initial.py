# Generated by Django 5.0.7 on 2025-10-23 22:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("bio", models.TextField(blank=True, max_length=500)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "oauth_provider",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("oauth_id", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StylePreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_styles",
                    models.JSONField(
                        default=list, help_text="List of preferred fashion styles"
                    ),
                ),
                (
                    "preferred_colors",
                    models.JSONField(
                        default=list, help_text="List of preferred colors"
                    ),
                ),
                (
                    "preferred_brands",
                    models.JSONField(
                        default=list, help_text="List of preferred brands"
                    ),
                ),
                (
                    "preferred_patterns",
                    models.JSONField(
                        default=list, help_text="List of preferred patterns"
                    ),
                ),
                (
                    "budget_min",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "budget_max",
                    models.DecimalField(decimal_places=2, default=1000, max_digits=10),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "occasions",
                    models.JSONField(
                        default=list,
                        help_text="Preferred occasions (work, casual, formal, party)",
                    ),
                ),
                ("prefer_sustainable", models.BooleanField(default=False)),
                ("prefer_secondhand", models.BooleanField(default=False)),
                (
                    "fit_preference",
                    models.CharField(
                        blank=True,
                        help_text="Preferred fit (loose, regular, tight)",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="style_preference",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "style_preferences",
            },
        ),
        migrations.CreateModel(
            name="UserFollowing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_following",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("O", "Other"),
                            ("N", "Prefer not to say"),
                        ],
                        max_length=1,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "body_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("slim", "Slim"),
                            ("athletic", "Athletic"),
                            ("average", "Average"),
                            ("curvy", "Curvy"),
                            ("plus", "Plus Size"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "height",
                    models.IntegerField(
                        blank=True, help_text="Height in cm", null=True
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        blank=True, help_text="Weight in kg", null=True
                    ),
                ),
                ("top_size", models.CharField(blank=True, max_length=10)),
                ("bottom_size", models.CharField(blank=True, max_length=10)),
                ("shoe_size", models.CharField(blank=True, max_length=10)),
                ("dress_size", models.CharField(blank=True, max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_profiles",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["username"], name="users_usernam_baeb4b_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["-created_at"], name="users_created_30b417_idx"),
        ),
        migrations.AddIndex(
            model_name="userfollowing",
            index=models.Index(
                fields=["follower", "-created_at"],
                name="user_follow_followe_ed801e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userfollowing",
            index=models.Index(
                fields=["following", "-created_at"],
                name="user_follow_followi_6730ec_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userfollowing",
            unique_together={("follower", "following")},
        ),
    ]
